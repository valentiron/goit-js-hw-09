{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE7B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,aAAY,KACNH,EACFF,EAAQ,C,SAACH,E,MAASC,IAElBG,EAAO,C,SAACJ,E,MAASC,GAAO,GAGzBA,EAAM,G,EA5CE,CACXQ,KAAMC,SAASC,cAAc,UAI1BF,KAAKG,iBAAiB,UAC3B,SAAmBC,GACjBA,EAAMC,iBACN,IAAIC,EAAQF,EAAMG,OAAOf,MAAMgB,MAC3BC,EAAOL,EAAMG,OAAOE,KAAKD,MACzBE,EAASN,EAAMG,OAAOG,OAAOF,OAKnC,SAAqBG,EAAOF,EAAMC,GAChC,IAAIE,EAAWD,EACf,IAAK,IAAIE,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EACjCvB,EAAcuB,EAAGD,GAChBE,MAAK,EAACvB,SAACA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAExE0B,OAAM,EAAC3B,SAACA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAItEoB,GAAYH,C,CAfbW,CAAYC,OAAOf,GAAQe,OAAOZ,GAAOY,OAAOX,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector(\"form\"),\n}\n\n\nrefs.form.addEventListener(\"submit\", getValues);\nfunction getValues(event) {\n  event.preventDefault();\n  let first = event.target.delay.value;\n  let step = event.target.step.value;\n  let amount = event.target.amount.value;\n\n  newPromises(Number(first), Number(step), Number(amount));\n}\n\nfunction newPromises(delay, step, amount) {\n  let newDelay = delay;\n  for (let i = 1; i <= amount; i += 1) {\n   createPromise(i, newDelay)\n   .then(({position, delay}) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n   })\n   .catch(({position, delay}) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n   });\n    \n\n   newDelay += step;\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n\n  const shouldResolve = Math.random() > 0.3;\n\n  setInterval(() => {\n    if (shouldResolve) {\n      resolve({position,delay});\n    } else {\n      reject({position,delay});\n    }\n\n  }, delay)\n\n});\n\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","form","document","querySelector","addEventListener","event","preventDefault","first","target","value","step","amount","delay1","newDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$newPromises","Number"],"version":3,"file":"03-promises.7e83e64d.js.map"}